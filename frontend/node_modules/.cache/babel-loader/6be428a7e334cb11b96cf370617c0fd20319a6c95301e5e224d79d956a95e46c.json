{"ast":null,"code":"import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    if (_enum) {\n      const lengths = _enum.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = _enum;\n    }\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) === 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\nexport { MaskedEnum as default };","map":{"version":3,"names":["MaskedPattern","IMask","MaskedEnum","constructor","opts","updateOptions","_update","enum","_enum","eopts","lengths","map","e","length","requiredLength","Math","min","optionalLength","max","mask","repeat","doValidate","flags","some","indexOf","unmaskedValue","default"],"sources":["/Users/cristinaalarcon/crisStuff/tokenProject/frontend/node_modules/imask/esm/masked/enum.js"],"sourcesContent":["import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    if (_enum) {\n      const lengths = _enum.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = _enum;\n    }\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) === 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,cAAc;AACxC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,OAAO,WAAW;AAClB,OAAO,oCAAoC;AAC3C,OAAO,cAAc;AACrB,OAAO,iCAAiC;AACxC,OAAO,qBAAqB;AAC5B,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAO,aAAa;;AAEpB;AACA,MAAMC,UAAU,SAASF,aAAa,CAAC;EACrCG,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAACA,IAAI,CAAC,CAAC,CAAC;EACf;;EAEAC,aAAaA,CAACD,IAAI,EAAE;IAClB,KAAK,CAACC,aAAa,CAACD,IAAI,CAAC;EAC3B;EACAE,OAAOA,CAACF,IAAI,EAAE;IACZ,MAAM;MACJG,IAAI,EAAEC,KAAK;MACX,GAAGC;IACL,CAAC,GAAGL,IAAI;IACR,IAAII,KAAK,EAAE;MACT,MAAME,OAAO,GAAGF,KAAK,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC;MACxC,MAAMC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,OAAO,CAAC;MAC3C,MAAMO,cAAc,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGR,OAAO,CAAC,GAAGI,cAAc;MAC5DL,KAAK,CAACU,IAAI,GAAG,GAAG,CAACC,MAAM,CAACN,cAAc,CAAC;MACvC,IAAIG,cAAc,EAAER,KAAK,CAACU,IAAI,IAAI,GAAG,GAAG,GAAG,CAACC,MAAM,CAACH,cAAc,CAAC,GAAG,GAAG;MACxE,IAAI,CAACV,IAAI,GAAGC,KAAK;IACnB;IACA,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;EACtB;EACAY,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAACX,CAAC,IAAIA,CAAC,CAACY,OAAO,CAAC,IAAI,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAACJ,UAAU,CAACC,KAAK,CAAC;EAC5F;AACF;AACArB,KAAK,CAACC,UAAU,GAAGA,UAAU;AAE7B,SAASA,UAAU,IAAIwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}