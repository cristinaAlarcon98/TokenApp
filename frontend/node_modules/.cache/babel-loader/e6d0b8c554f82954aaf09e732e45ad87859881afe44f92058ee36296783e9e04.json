{"ast":null,"code":"import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\nexport { PatternFixedDefinition as default };","map":{"version":3,"names":["ChangeDetails","DIRECTION","isString","ContinuousTailDetails","PatternFixedDefinition","constructor","opts","Object","assign","_value","isFixed","value","unmaskedValue","isUnmasking","rawInputValue","_isRawInput","displayValue","reset","remove","fromPos","toPos","length","slice","nearestInputPos","cursorPos","direction","NONE","minPos","maxPos","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","totalInputPositions","extractInput","flags","raw","isComplete","isFilled","Boolean","_appendChar","ch","details","appendEager","eager","appended","char","isResolved","input","tail","rawInserted","inserted","_appendEager","_appendPlaceholder","extractTail","appendTail","String","appendTo","append","str","tailShift","doCommit","state","_rawInputValue","default"],"sources":["/Users/cristinaalarcon/crisStuff/tokenProject/frontend/node_modules/imask/esm/masked/pattern/fixed-definition.js"],"sourcesContent":["import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n\nexport { PatternFixedDefinition as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}